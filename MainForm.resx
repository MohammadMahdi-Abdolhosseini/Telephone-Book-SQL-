<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAACgCAYAAADHCaiQAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAP
        oAAAD6ABoGqMdwAAA8ZJREFUeF7t1EtWYkEQRVE6TMERMHznaK2wVkiaXATl5e/maexGhQIv4mCd3t/f
        P+CLwOYIbI7A5ghsjsDmCGyOwOYIbI7A5ghsjsDmCGyOwOYIbI7A5ghsjsDmCGyOwOYIbI7A5ghszjrw
        29vbU9RrXdgEVuHC6XT6kXpNUJ+xoqUD11FUwL+o31d99iqWC1wfXwU6Uv156plmtkzg8sgqRA/lM6hn
        nNH0gcujqqOPUD6TeuaZTB14trC1FSJPG3j2uGn2yNMFzoOtEDeVz6x2GmmqwKuFrc0YeZrAq8dNs0We
        IrBL3DRT5OGB3eKmWSIPDewaN80QeVhg97hpdOShgdVBHG0XOL/V6hiOcl91i9a6B94tbhoVuWvgXeOm
        LQKrxXeRX3B1m1a6Bc7l1OI76R25a2C18I7sAue3Vi27o7yHutXRugVWi+6MwOZsAsciBL6Vd1E3O1KX
        wGpB9PkrJvBAyweOBQh8X95H3e4ozQOrxXBFYHMENkdgc8sGjgcn8GN5J3XDIzQNrBbCLQKbI7A5Apsj
        sDkCmyOwsbgTgY21jBuaBibyY8sGDgR+jMDmCGws7kNgY63jhuaBiXzf8oEDge8jsLG4i01gIt/qETc0
        DxwIfIvA5uwCE/kq76FudbQugQOBr3rFDV0DE7nvX2/oFjjsHrh33NA98M6Re8cNXQOHXSPn3uomLXUP
        HHaMPCJuGBI47BQ4v9DqDq0NDbxD5JFxw7DAwT3y6LhhaODgGnmGuGF44OAWeZa4YYrAwSXyTHHDNIGD
        S2C12yhT/RftEnimyEMDO4UtlXupvXsaFtgxbG2GyN0D59LucVO5r7pHa10D7xS2Nipyt8A7x00jIncJ
        TNyr3pGbBs5liPtdeRd1tyM1C0zYx3pEbhKYuM9rHblZYLUMtKUC5zdSLQItb6bu+apDAxP371pFPiww
        cV/XIvLLgfOhiHuM8p5B3fw3fh24foCgHhSvU7dWTX7yVOD6Q9TDoL26g2pVuxu4fjP1gRin7qMahpvA
        5YvUG2M+ZbO657fAhF2bivwZOH9A3PWVLT8DE9ZT0VX/AmzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzI
        IXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzI
        IXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIXzIIVycz+ePIH+IZX11vVwu
        X/8g9PrKltH2M3Ai8Poy7H+Xj3+xR04Y07+fmQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="contactInfoDBDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contactInfoTBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>187, 17</value>
  </metadata>
  <metadata name="contactInfoTTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>385, 17</value>
  </metadata>
</root>